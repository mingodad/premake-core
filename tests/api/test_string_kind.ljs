//
// tests/api/test_string_kind.ljs
// Tests the string API value type.
// Copyright (c) 2012 Jason Perkins and the Premake project
//

	var p = premake;
	var suite = test.declare("api_string_kind");
	var api = p.api;


//
// Setup and teardown
//

	function suite.setup() {
		api.register ({
			name = "testapi",
			kind = "string",
			scope = "project",
			allowed = { "One", "Two", "Three" },
		});
		test.createWorkspace();
	}

	function suite.teardown() {
		testapi = null;
	}


//
// String values should be stored as-is.
//

	function suite.storesString_onStringValue() {
		testapi ("One");
		test.isequal("One", api.scope.project.testapi);
	}


//
// New values should overwrite old ones.
//

	function suite.overwritesPreviousValues() {
		testapi ("One");
		testapi ("Two");
		test.isequal("Two", api.scope.project.testapi);
	}


//
// An error occurs if a table value is assigned to a string field.
//

	function suite.raisesError_onTableValue() {
		ok, err = pcall(function () {
			testapi ({ "One", "Two" });
		});
		test.isfalse(ok);
	}


//
// Raises an error on a disallowed value.
//

	function suite.raisesError_onDisallowedValue() {
		ok, err = pcall(function () {
			testapi ("NotAllowed");
		});
		test.isfalse(ok);
	}


//
// If allowed values present, converts to provided case.
//

	function suite.convertsCase_onAllowedValue() {
		testapi ("oNe");
		test.isequal("One", api.scope.project.testapi);
	}


