//
// vs2005_csproj_user.ljs
// Generate a Visual Studio 2005+ C# .user file.
// Copyright (c) Jason Perkins and the Premake project
//

	var p = premake;
	var m = p.vstudio.cs2005;
	var dn = p.vstudio.dotnetbase;


//
// Generate a Visual Studio 200x C# user file.
//

	m.elements.userProjectPropertyGroup = function() {
		return {
			m.referencePath,
		};
	};

	m.elements.userConfigPropertyGroup = function() {
		return {
			m.localDebuggerCommandArguments,
		};
	};

	function m.generateUser(prj) {
		// Only want output if there is something to configure
		var prjGroup = p.capture(function() {
			p.push(2);
			p.callArray(m.elements.userProjectPropertyGroup, prj);
			p.pop(2);
		});

		var contents = {};
		var size = 0;

		for( cfg in p.project.eachconfig(prj) ) {
			contents[cfg] = p.capture(function() {
				p.push(2);
				p.callArray(m.elements.userConfigPropertyGroup, cfg);
				p.pop(2);
			});
			size = size + #contents[cfg];
		}

		if( #prjGroup > 0 || size > 0 ) {
			p.vstudio.projectElement();

			if( #prjGroup > 0 ) {
				p.push('<PropertyGroup>');
				p.outln(prjGroup);
				p.pop('</PropertyGroup>');
			}

			for( cfg in p.project.eachconfig(prj) ) {
				if( #contents[cfg] > 0 ) {
					p.push('<PropertyGroup %s>', dn.condition(cfg));
					p.outln(contents[cfg]);
					p.pop('</PropertyGroup>');
				}
			}

			p.pop('</Project>');
		}
	}



//-
// Output any reference paths required by the project.
//-

	function m.referencePath(prj) {
		// Per-configuration reference paths aren't supported (are they?) so just
		// use the first configuration in the project
		var cfg = p.project.getfirstconfig(prj);
		var paths = p.vstudio.path(prj, cfg.libdirs);
		if( #paths > 0 ) {
			p.w('<ReferencePath>%s</ReferencePath>', table.concat(paths, ";"));
		}
	}



	function m.localDebuggerCommandArguments(cfg) {
		if( #cfg.debugargs > 0 ) {
			p.x('<StartArguments>%s</StartArguments>', table.concat(cfg.debugargs, " "));
		}
	}
