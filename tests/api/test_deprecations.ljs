//
// tests/api/test_table_kind.ljs
// Tests the table API value type.
// Copyright (c) 2012-2014 Jason Perkins and the Premake project
//

	var p = premake;
	var suite = test.declare("api_deprecations");
	var api = p.api;


	function suite.setup() {
		workspace("MyWorkspace");
		configurations ({ "Debug", "Release" });
	}

	function suite.setsNewValue_whenOldValueIsRemovedViaWildcard_inSubConfig() {
		var prj = project ("MyProject");
			filter ({ "configurations:Debug" });
				flags ({ "Symbols" });

			filter ({ "*" });
				removeflags ({ "*" });

		// test output.
		var cfg = test.getconfig(prj, "Debug", platform);
		test.isequal("Default", cfg.Symbols);
	}


	function suite.setsNewValue_whenOldValueIsRemovedInOtherConfig_inSubConfig() {
		var prj = project ("MyProject");
			flags ({ "Symbols" });

			filter ({ "configurations:Release" });
				removeflags ({ "*" });

		// test output.
		test.isequal("On",      test.getconfig(prj, "Debug", platform).Symbols);
		test.isequal("Default", test.getconfig(prj, "Release", platform).Symbols);
	}


	function suite.dontRemoveFlagIfSetThroughNewApi() {
		var prj = project ("MyProject");
			floatingpoint ("Fast");
			removeflags ("*");

		// test output.
		var cfg = test.getconfig(prj, "Debug", platform);
		test.isequal("Fast", cfg.floatingpoint);
	}


	function suite.setsNewValue_whenOldValueFromParentIsRemovedInOtherConfig_inSubConfig() {
		flags ({ "Symbols" });

		var prj = project ("MyProject");
			filter ({ "configurations:Release" });
				removeflags ({ "*" });

		// test output.
		test.isequal("On",      test.getconfig(prj, "Debug", platform).Symbols);
		test.isequal("Default", test.getconfig(prj, "Release", platform).Symbols);
	}

