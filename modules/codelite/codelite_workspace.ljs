//
// Name:        codelite/codelite_workspace.ljs
// Purpose:     Generate a CodeLite workspace.
// Author:      Ryan Pusztai
// Modified by: Andrea Zanellato
//              Manu Evans
// Created:     2013/05/06
// Copyright:   (c) 2008-2015 Jason Perkins and the Premake project
//

	var p = premake;
	var project = p.project;
	var workspace = p.workspace;
	var tree = p.tree;
	var codelite = p.modules.codelite;

	codelite.workspace = {};
	var m = codelite.workspace;

//
// Generate a CodeLite workspace
//
	function m.generate(wks) {
		p.utf8();

		//
		// Header
		//
		p.w('<?xml version="1.0" encoding="UTF-8"?>');

		var tagsdb = "";
//		local tagsdb = "./" .. wks.name .. ".tags"
		p.push('<CodeLite_Workspace Name="%s" Database="%s" SWTLW="No">', wks.name, tagsdb);

		//
		// Project list
		//
		var tr = workspace.grouptree(wks);
		tree.traverse(tr, {
			onleaf = function(n) {
				var prj = n.project;

				// Build a relative path from the workspace file to the project file
				var prjpath = p.filename(prj, ".project");
				prjpath = path.getrelative(prj.workspace.location, prjpath);

				if( (prj.name == wks.startproject) ) {
					p.w('<Project Name="%s" Path="%s" Active="Yes"/>', prj.name, prjpath);
				} else {
					p.w('<Project Name="%s" Path="%s"/>', prj.name, prjpath);
				}
			},

			onbranchenter = function(n) {
				p.push('<VirtualDirectory Name="%s">', n.name);
			},

			onbranchexit = function(n) {
				p.pop('</VirtualDirectory>');
			},
		});

		//
		// Configurations
		//

		// count the number of platforms
		var platformsPresent = {};
		var numPlatforms = 0;

		for( cfg in workspace.eachconfig(wks) ) {
			var platform = cfg.platform;
			if( platform && ! platformsPresent[platform] ) {
				++numPlatforms    ;
				platformsPresent[platform] = true;
			}
		}

		if( numPlatforms >= 2 ) {
			codelite.workspace.multiplePlatforms = true;
		}

		// for each workspace config
		p.push('<BuildMatrix>');
		for( cfg in workspace.eachconfig(wks) ) {

			var cfgname = codelite.cfgname(cfg);
			p.push('<WorkspaceConfiguration Name="%s" Selected="yes">', cfgname);

			var xtr = workspace.grouptree(wks);
			tree.traverse(xtr, {
				onleaf = function(n) {
					var prj = n.project;
					p.w('<Project Name="%s" ConfigName="%s"/>', prj.name, cfgname);
				}
			});
			p.pop('</WorkspaceConfiguration>');

		}
		p.pop('</BuildMatrix>');

		p.pop('</CodeLite_Workspace>');
	}
